{"version":3,"sources":["components/Form/Form.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/ContactsList/ContactsList.module.css","App.module.css","components/Container/Container.module.css","components/Container/Container.js","components/Form/Form.js","components/Filter/Filter.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","Form","state","name","number","handleInputChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","id","uuidv4","props","onSubmit","reset","this","form","label","onChange","input","type","pattern","title","required","button","btnText","Component","Filter","text","Contact","propType","PropTypes","string","isRequired","ContactsList","contacts","onDeleteContact","map","item","onClick","App","initialContacts","filter","formSubmitHandler","data","forEach","element","toLowerCase","alert","changeFilter","getVisibleContact","contactFilter","includes","deleteContact","contactId","prevState","visibleContacts","contactTitle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cefc06cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__14G4x\",\"label\":\"Form_label__1ph2Q\",\"input\":\"Form_input__3SUPk\",\"button\":\"Form_button__2O86R\",\"btnText\":\"Form_btnText__3pv8G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__1eRvy\",\"value\":\"Filter_value__2YXFy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contact_name__2dTXX\",\"number\":\"Contact_number__2b9-5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsList_item__1RFc7\",\"button\":\"ContactsList_button__vTCQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__2fE2s\",\"contactTitle\":\"App_contactTitle__2TLJT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__BAmPM\"};","import s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './Form.module.css';\nimport PropTypes from 'prop-types'; // ES6\n\nexport default class Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n  handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  handleSubmit = e => {\n    const { name, number } = this.state;\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    this.props.onSubmit(contact);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    const { handleSubmit, handleInputChange } = this;\n    return (\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label className={s.label}>\n          Name\n          <input\n            onChange={handleInputChange}\n            value={name}\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </label>\n        <label className={s.label}>\n          Phone\n          <input\n            value={number}\n            className={s.input}\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          <span className={s.btnText}> Add contacts</span>\n        </button>\n      </form>\n    );\n  }\n}\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.text}>\n      Find contacts by name\n      <input\n        className={s.value}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from './Contact.module.css';\nexport default function Contact({ name, number }) {\n  return (\n    <>\n      <span className={s.name}>{name}:</span>\n      <span className={s.number}>{number}</span>\n    </>\n  );\n}\nContact.propType = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Contact from '../Contact';\nimport s from './ContactsList.module.css';\n\nexport default function ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      {contacts.map(({ name, number, id }) => (\n        <li className={s.item} key={id}>\n          <Contact name={name} number={number} />\n          <button\n            className={s.button}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { Component } from 'react';\nimport Container from './components/Container';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactsList';\nimport initialContacts from './contacts.json';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n  formSubmitHandler = data => {\n    this.state.contacts.forEach(element => {\n      if (element.name.toLowerCase() === data.name.toLowerCase()) {\n        data.name = 'repeat';\n        return alert('contact is already in the directory');\n      }\n    });\n    if (data.name === 'repeat') {\n      return;\n    }\n    this.setState(({ contacts }) => ({\n      contacts: [data, ...contacts],\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  getVisibleContact = () => {\n    const { filter, contacts } = this.state;\n    const contactFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(contactFilter),\n    );\n  };\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  render() {\n    const { filter } = this.state;\n    const { formSubmitHandler, changeFilter, deleteContact } = this;\n    const visibleContacts = this.getVisibleContact();\n    return (\n      <Container>\n        <h1 className={s.title}>Phonebook</h1>\n        <Form onSubmit={formSubmitHandler} />\n        <Filter value={filter} onChange={changeFilter} />\n        <h2 className={s.contactTitle}>Contacts</h2>\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}